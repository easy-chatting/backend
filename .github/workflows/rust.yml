name: Rust CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-deps-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  clippy:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-deps-${{ hashFiles('**/Cargo.lock') }}

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --locked

  test:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - uses: actions/checkout@v3

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-deps-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked
